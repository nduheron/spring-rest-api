{
  "openapi": "3.0.1",
  "info": {
    "title": "User API",
    "version": "1.0.0-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:52619/spring-rest",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/v1/users/{login}": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Rechercher un utilisateur",
        "operationId": "findUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "batman"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      },
      "put": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Modifier un utilisateur",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "batman"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeError"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Supprimer un utilisateur",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "batman"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      }
    },
    "/v1/accounts/me/attributes/password": {
      "put": {
        "tags": [
          "Profil utilisateur"
        ],
        "summary": "Changer de mot de passe",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeError"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Rechercher tous les utilisateurs",
        "operationId": "findUsers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/csv;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "example": "LOGIN,NOM,PRENOM,EMAIL,ROLE\nbatman,Wayne,Bruce,batman@yopmail.fr,SYSTEM"
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      },
      "post": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Créer un utilisateur",
        "operationId": "saveUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FunctionalError"
                  }
                },
                "examples": {
                  "AlreadyExist": {
                    "description": "AlreadyExist",
                    "value": {
                      "code": "ALREADY_EXIST",
                      "message": "User batman already exist"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeError"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      }
    },
    "/v1/users/{login}/attributes/password": {
      "post": {
        "tags": [
          "Utilisateurs"
        ],
        "summary": "Réinitialiser le mot de passe",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "batman"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      }
    },
    "/v1/oauth/token": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttributeError"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/v1/accounts/me": {
      "get": {
        "tags": [
          "Profil utilisateur"
        ],
        "summary": "Récupérer le profil de l'utilisateur connecté",
        "operationId": "whoIAm",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauthPasswordFlow": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AttributeError": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          }
        }
      },
      "FunctionalError": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "le code de l'erreur"
          },
          "message": {
            "type": "string",
            "description": "description de l'erreur"
          },
          "additionalData": {
            "type": "object",
            "description": "propriétés additionnelles spécifiques"
          }
        }
      },
      "UpdateUser": {
        "required": [
          "email",
          "nom",
          "prenom",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "example": "batman@yopmail.fr"
          },
          "nom": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "example": "Wayne"
          },
          "prenom": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "example": "Bruce"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "SYSTEM"
            ]
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "ChangePassword": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "newPassword": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "example": "12345"
          },
          "oldPassword": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "example": "56789"
          }
        }
      },
      "CreateUser": {
        "required": [
          "email",
          "login",
          "nom",
          "prenom",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "example": "batman@yopmail.fr"
          },
          "nom": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "example": "Wayne"
          },
          "prenom": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "example": "Bruce"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "SYSTEM"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "login": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "example": "batman"
          }
        }
      },
      "User": {
        "required": [
          "email",
          "login",
          "nom",
          "prenom",
          "role"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "example": "batman@yopmail.fr"
          },
          "nom": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "example": "Wayne"
          },
          "prenom": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "example": "Bruce"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "USER",
              "SYSTEM"
            ]
          },
          "enabled": {
            "type": "boolean"
          },
          "login": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "example": "batman"
          },
          "derniereConnexion": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TokenRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 20,
            "minLength": 2,
            "type": "string",
            "example": "batman"
          },
          "password": {
            "maxLength": 20,
            "minLength": 5,
            "type": "string",
            "example": "12345"
          },
          "grant_type": {
            "pattern": "^password$",
            "type": "string",
            "default": "password"
          }
        }
      },
      "Token": {
        "required": [
          "access_token",
          "expires_in",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "RsT5OjbzRn430zqMLgV3Ia"
          },
          "token_type": {
            "type": "string",
            "example": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "format": "int64",
            "example": 3600
          }
        }
      }
    },
    "securitySchemes": {
      "oauthPasswordFlow": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}